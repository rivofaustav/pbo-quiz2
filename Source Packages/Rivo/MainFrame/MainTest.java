
package Rivo.MainFrame;

/**
 *
 * @author Rivo
 */

import Rivo.shop.*;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MainTest extends javax.swing.JFrame {
    private int id = 0;
    private String code;
    private DefaultComboBoxModel comboboxModel;
    private DefaultTableModel tabelModel;
    private ArrayList<Item> keranjang = new ArrayList<>();
    
    public MainTest() {
        ComboModel comboModel = new ComboModel();
        this.comboboxModel = new DefaultComboBoxModel<>(comboModel.getNames().toArray());//set comboboxlModel
        TabelModel tabelModel = new TabelModel();
        this.tabelModel = new DefaultTableModel(tabelModel.getColumnName(), 0);//set tabelModel
        
        initComponents();
    }
    
    private String setCode() {
        this.incId();
        String dt = new SimpleDateFormat("yyMMdd").format(new Date());//set tanggal sekarang dalam string
        this.code = String.format(dt+"%02d", this.id);//menggabungkan dengan id
        return code;
    }
     private void incId() {//increment id
        this.id += 1; 
    }
     private void decId(){//decrement id
         this.id -=1;
     }
     
     private Object[] addItem(String nama, int jumlah){
         float harga = 0;
         ComboModel items = new ComboModel();
         for(int i = 0; i < items.getNames().size(); i++){
             if(nama.equalsIgnoreCase(items.getNames().get(i))){
                 harga = items.getPrices().get(i);
             }
         }
         Object[] obj = {
             nama, harga, jumlah
         };
         return obj;
     }
     
     private void updateJumlah(String nama, int add){//fungsi update jumlah
         ArrayList<String> item = new ArrayList<>();
         for (int i = 0; i < tabelModel.getRowCount(); i++){
             item.add(tabelModel.getValueAt(i, 0).toString());
         }
         for (int i = 0; i < item.size(); i++){
             if(item.get(i).equals(nama)){
                 int jumlah = new Integer(tabelModel.getValueAt(i, 2).toString());
                 tabelModel.setValueAt(jumlah+add, i, 2);
             }
         }
     }
     
     private boolean isDuplicate(String nama){//untuk mengecek apakah barang yang dipilih adalah duplikat
         boolean result = false;
         ArrayList<String> item = new ArrayList<>();
         for(int i = 0; i < tabelModel.getRowCount(); i++){
             item.add(tabelModel.getValueAt(i, 0).toString());
         }
         for(String i : item){
             if (i.equals(nama)){
                 result = true;
             }
         }
         return result;
     }
     
     private boolean isEmpty(){//untuk mengecek apakah tabel kosong
         return this.tableList.getModel().getRowCount()<=0;
     }
     private void dsblCart(){//disable button save dan remove saat tabel kosong
         if(isEmpty()){
             this.buttonSave.setEnabled(false);
             this.buttonRemove.setEnabled(false);
         }else{
             this.buttonSave.setEnabled(true);
             this.buttonRemove.setEnabled(true);
         }
     }
     
     private void newTransaction(){//transaksi baru setelah transaksi selesai
         this.textJmlItem.setText("");
         this.textCode.setText("");
         this.buttonNew.setEnabled(true);
         this.buttonSave.setEnabled(false);
         this.buttonAdd.setEnabled(false);
         this.buttonCancel.setEnabled(false);
         this.buttonRemove.setEnabled(false);
         this.textJmlItem.setEnabled(false);
         this.comboItem.setEnabled(false);
         this.tabelModel.setRowCount(0);
         this.keranjang.clear();
     }

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textCode = new javax.swing.JTextField();
        buttonNew = new javax.swing.JButton();
        comboItem = new javax.swing.JComboBox<>();
        textJmlItem = new javax.swing.JTextField();
        buttonAdd = new javax.swing.JButton();
        buttonRemove = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Code");

        jLabel2.setText("Items");

        textCode.setEnabled(false);
        textCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCodeActionPerformed(evt);
            }
        });

        buttonNew.setText("New");
        buttonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewActionPerformed(evt);
            }
        });

        comboItem.setModel(this.comboboxModel);
        comboItem.setEnabled(false);
        comboItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboItemActionPerformed(evt);
            }
        });

        textJmlItem.setEnabled(false);
        textJmlItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textJmlItemActionPerformed(evt);
            }
        });

        buttonAdd.setText("Add");
        buttonAdd.setEnabled(false);
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        buttonRemove.setText("Remove");
        buttonRemove.setEnabled(false);
        buttonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveActionPerformed(evt);
            }
        });

        buttonSave.setText("Save");
        buttonSave.setEnabled(false);
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel");
        buttonCancel.setEnabled(false);
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        tableList.setModel(this.tabelModel);
        jScrollPane2.setViewportView(tableList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboItem, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(textJmlItem, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                                    .addComponent(textCode))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonNew, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonRemove))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonSave)
                                .addGap(18, 18, 18)
                                .addComponent(buttonCancel)))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonNew))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textJmlItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAdd))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRemove))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSave)
                    .addComponent(buttonCancel))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewActionPerformed
        this.textJmlItem.setText("1");
        this.buttonNew.setEnabled(false);
        this.buttonCancel.setEnabled(true);
        this.buttonAdd.setEnabled(true);
        this.textJmlItem.setEnabled(true);
        this.comboItem.setEnabled(true);
        this.textCode.setText(this.setCode());
        
    }//GEN-LAST:event_buttonNewActionPerformed

    private void comboItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        String nama = this.comboItem.getSelectedItem().toString();//get selected item dari comboItem
        int jumlah = new Integer(this.textJmlItem.getText());//textJmlItem iteger
        if(isDuplicate(nama)){
            updateJumlah(nama, jumlah);//menambah kolom jumlah dengan iputan jumlah baru
        }else {
            tabelModel.addRow(addItem(nama, jumlah));
        }
        this.dsblCart();
    }//GEN-LAST:event_buttonAddActionPerformed

    private void textCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCodeActionPerformed

    private void textJmlItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textJmlItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textJmlItemActionPerformed

    private void buttonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveActionPerformed
        if(tableList.getSelectedRow()<0){
            String str = "Pilih item yang ingin dihapus terlebih dahulu!";//warning untuk barang yang ingin dihapus jika tidak dipilih
            JOptionPane.showMessageDialog(this, str, "Information", JOptionPane.INFORMATION_MESSAGE);
        }else {
            int count = tableList.getSelectedRows().length;//hapus barang sesuai yang dipilih
            for(int i = 0; i < count; i++){
                tabelModel.removeRow(tableList.getSelectedRow());
            }
        }
        this.dsblCart();
    }//GEN-LAST:event_buttonRemoveActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        try{
            for(int i = 0; i < tabelModel.getRowCount(); i++){
                String nama = tabelModel.getValueAt(i, 0).toString();
                float harga = new Float(tabelModel.getValueAt(i, 1).toString());//tambah tiap hasil ke keranjang
                int jumlah = new Integer(tabelModel.getValueAt(i, 2).toString());
                this.keranjang.add(new Item(nama, harga, jumlah));
            }
            Transaksi trs = new Transaksi(this.code, this.keranjang);
            StringBuilder str = new StringBuilder();
            str.append(trs.print());//append output transaksi
            JOptionPane.showMessageDialog(this, str, "Detail Transaksi", JOptionPane.INFORMATION_MESSAGE);//panggil dialog
            newTransaction();//transaksi baru
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        newTransaction();
        this.decId();
    }//GEN-LAST:event_buttonCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonNew;
    private javax.swing.JButton buttonRemove;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox<String> comboItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableList;
    private javax.swing.JTextField textCode;
    private javax.swing.JTextField textJmlItem;
    // End of variables declaration//GEN-END:variables

   
}
